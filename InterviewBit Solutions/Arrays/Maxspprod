********************Find Problem Statement here - https://www.interviewbit.com/problems/maxspprod/*****************************************
You are given an array A containing N integers. The special product of each ith integer in this array is defined as the product of the 
following:<ul>
LeftSpecialValue: For an index i, it is defined as the index j such that A[j]>A[i] (i>j). If multiple A[j]â€™s are present in multiple 
positions, the LeftSpecialValue is the maximum value of j. 
RightSpecialValue: For an index i, it is defined as the index j such that A[j]>A[i] (j>i). If multiple A[j]s are present in multiple 
positions, the RightSpecialValue is the minimum value of j.
Write a program to find the maximum special product of any integer in the array.
Input: You will receive array of integers as argument to function.
Return: Maximum special product of any integer in the array modulo 1000000007.
Note: If j does not exist, the LeftSpecialValue and RightSpecialValue are considered to be 0.
Constraints 1 <= N <= 10^5 1 <= A[i] <= 10^9
************************************************************Solution***********************************************************************
public class Solution {
    private ArrayList<Integer> leftSpecialV(ArrayList<Integer> A){
        ArrayList<Integer> r = new ArrayList<>();
        Stack<Integer> s = new Stack<>();
        for(int i=0;i<A.size();i++){
            while(!s.empty() && A.get(s.peek()) <= A.get(i)){
                s.pop();
            }
            if(s.empty()){
                r.add(0);
            }
            else{
                r.add(s.peek());
            }
            s.push(i);
        }
        return r;
    }

    private ArrayList<Integer> rightSpecialV(ArrayList<Integer> A){
        ArrayList<Integer> r = new ArrayList<>();
        Stack<Integer> s = new Stack<>();
        for(int i=A.size()-1;i>=0;i--){
            while(!s.empty() && A.get(s.peek()) <= A.get(i)){
                s.pop();
            }
            if(s.empty()){
                r.add(0,0);
            }
            else{
                r.add(0,s.peek());
            }
            s.push(i);
        }
        return r;
    }

    public int maxSpecialProduct(int[] q) {
        ArrayList<Integer> A = new ArrayList<>();
        for(int i=0; i<q.length; i++){
            A.add(q[i]);
        }
        ArrayList<Integer> l = leftSpecialV(A);
        ArrayList<Integer> r = rightSpecialV(A);
        long product=0, res= 0;
        for(int i=0;i<A.size();i++){
            res= (long)l.get(i) * (long)r.get(i);
            if(product < res){
                product  = res;
            }
        }
        return (int)(product%1000000007);
    }
}
