import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;
public class Solution {

    static String caesarCipher(String s, int k) {
        k = k%26;
        char[] cArr = s.toCharArray();
        int temp = 0;
        for(int i=0; i<cArr.length; i++){
            if((int)cArr[i] >= 65 && (int)cArr[i] <= 90){
     temp = ((int)cArr[i] + k <= 90) ? ((int)cArr[i] + k) : ((((int)cArr[i] - 64 + k) % 26) + 64);
                cArr[i] = (char)temp;
            }
            else if((int)cArr[i] >= 97 && (int)cArr[i] <= 122){
                System.out.print("else==> " + ((int)cArr[i] + k));
     temp = ((int)cArr[i] + k <= 122) ? ((int)cArr[i] + k) : ((((int)cArr[i] -96 + k) % 26) + 96);
                cArr[i] = (char)temp;
            }
        }
        return String.valueOf(cArr);
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        String s = scanner.nextLine();

        int k = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        String result = caesarCipher(s, k);

        bufferedWriter.write(result);
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
