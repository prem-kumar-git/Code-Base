import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;
public class Solution {

    static int flatlandSpaceStations(int n, int[] c) {
        int max = 0;
        int[] arr = new int[n];
        Arrays.fill(arr, Integer.MAX_VALUE);
        for(int i=0; i<c.length; i++){
            for(int j=0; j<arr.length; j++){
                if(((c[i]-j >= 0) ? (c[i]-j) : -(c[i]-j)) < arr[j])
                    arr[j] = (c[i]-j >= 0) ? (c[i]-j) : -(c[i]-j);
            }
        }
        Arrays.sort(arr);
        return arr[n-1];
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String[] nm = scanner.nextLine().split(" ");

        int n = Integer.parseInt(nm[0]);

        int m = Integer.parseInt(nm[1]);

        int[] c = new int[m];

        String[] cItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < m; i++) {
            int cItem = Integer.parseInt(cItems[i]);
            c[i] = cItem;
        }

        int result = flatlandSpaceStations(n, c);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
