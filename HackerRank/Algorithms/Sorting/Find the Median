********************Find Problem Statement here - https://www.hackerrank.com/challenges/find-the-median/problem

import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;
public class Solution {
    static void findMedian(int[] a){
        qs(0,a.length-1,a);
    }
    static void qs(int start, int end, int[] a){
        if(start < end){
            int pIndx = partition(start, end, a);
            qs(start, pIndx-1, a);
            qs(pIndx+1, end, a);
        }
    }
    static int partition(int start, int end, int[] a){
        int pivot = a[end], pIndx=start, temp;
        for(int i=start; i<end; i++){
            if(a[i] <= pivot){
                temp = a[pIndx];
                a[pIndx] = a[i];
                a[i] = temp;
                pIndx++;
            }
        }
        temp = a[pIndx];
        a[pIndx] = a[end];
        a[end] = temp;
        return pIndx;
    }
    
    private static final Scanner scanner = new Scanner(System.in);
    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));
        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");
        int[] arr = new int[n];
        String[] arrItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");
        for (int i = 0; i < n; i++) {
            int arrItem = Integer.parseInt(arrItems[i]);
            arr[i] = arrItem;
        }
        findMedian(arr);
        bufferedWriter.write(String.valueOf(arr[arr.length/2]));
        bufferedWriter.newLine();
        bufferedWriter.close();
        scanner.close();
    }
}
